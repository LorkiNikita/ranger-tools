Описание приложенных файлов:
**scr_dump/** - папка с программой, создающей дамп из скомпилированного скрипта.
**MS_Keller/** - папка с дампом ванильного скрипта и скриптом, который у меня получился.
**decompiling_template.svr** - скрипт, в котором расставлены почти все блоки, осталось только вписать нужные значения и проделать финальную часть реверса. Тут не нужно тратить время на расстановку блоков и удаление из них стандартных значений полей.
**check_marks.png** - пояснение к гайду

Как создать дамп скрипта:
1. Необходим установленный язык программирования **python**, установить можно здесь: https://python.org
2. Открываем папку `scr_dump/`
3. Берем скомпилированный скрипт `.scr`
4. Кладем в папку `scripts/`
5. Тыкаем на батник `create_dumps.bat`
6. В папке `dumps/` появятся дампы всех скриптов из папки `scripts/`
Примечание: батник не перезаписывает дампы, которые уже созданы (для экономии времени), поэтому если вы хотите сделать дамп другой версии скомпилированного скрипта с тем же именем, то нужно удалить старый дамп, переименовать скрипт или тыкнуть на батник `create_all_dumps.bat`, но последний вариант может занять много времени.


Если у вас есть дамп, и вы хотите сделать исходник скрипта, то нужно перенести всю информацию в RScript. Далее идет описание разделов дампа, что с ними делать, что означают некоторые поля, куда что писать...
0. **Version**
Если версия меньше **6**, то дамп создать нельзя (а где вы тогда смотрите версию???), о формате я ничего сказать не могу, т.к. таких скриптов не видел. Если версия равна **6**, то часть параметров может быть неиспользуемой, их нужно игнорировать. Если версия - **7**, то все хорошо, вы реверсите относительно свежий скрипт.

1. **GlobalVars** и **LocalVars** - список переменных в скрипте
Переменным нужно прописать имя, тип (они в дампе называются немного по-другому), начальное значение, флаг глобальности (если переменная из **GlobalVars**).
В конце списка **LocalVars** есть переменные с названиями звезд, планет, групп и диалогов, их прописывать не нужно, они сами добавятся.
Примечание: начальное значение можно не указывать, если оно `0` (**int** и **dword**), `0.0` (**float**), `''` (**str**), `None` (**unknown**).

2. **GlobalCode**, **InitCode**, **TurnCode**, **DialogBegin**
Нужно создать блок **op** с соответствующим типом и вставить туда код из соответствующего раздела. Если раздел пустой, то блок можно не создавать.

Примечание для следующих разделов: в свойствах объектов длинные перечисления (типа `Maloc,Peleng,People,Fei,Gaal` или `Ranger,Warrior,Pirate,Transport,Liner,Diplomat`) - это галочки. Если в перечислении нет `Use`, вся галочка группы галочек выключена, а если есть `Use`, то галочка включена (см. картинку `check_marks.png`). (Обычно никакие галочки трогать не нужно, все поля названы достаточно понятно, вопросов возникнуть не должно)

3. **Stars** - список звезд
В разделах  **Planets** и **Ships** описаны планеты и корабли, привязанные к звезде.
В разделе **StarLinks** прописаны линки между звездами

4. **Places** - список мест
5. **Items** - список скриптовых предметов
6. **Groups** - список групп
В поле **State** написан номер и название стейта, его нужно прикрепить.
7. **GroupLinks** - список линков между группами
8. **States** - список стейтов
*!!! Следите за нумерацией !!!*

9. **Dialogs**
Это список диалогов. Для каждого диалога нужно вписать его имя в поле **Name**, а также создать блок **op**, прикрепить его к диалогу, вставить в него код из раздела **Code** диалога.

10. **DialogMsgs**
*!!! Следите за нумерацией !!!*
**Name** - это нужно вставить в поле **Name**
**Code** - создаем блок **op** и вставляем в него код без `DText(CT("Script.<scriptname>.N"));` в начале
Потом нужно открыть `Lang.dat` скрипта, найти в нем строку по пути `"Script.<scriptname>.N"` (указанном в **Code**), вставить ее в текстовое поле блока. 

11. **DialogAnswers**
*!!! Следите за нумерацией !!!*
**Command** - это нужно вставить в поле **Name**
**Code** - создаем блок **op** и вставляем в него код без `exit;` в конце.
Потом нужно открыть `Lang.dat` скрипта, найти в нем строку по пути `"Script.<scriptname>.N"` (указанном в **Answer**), вставить ее в текстовое поле блока. 


После того, как все это сделано, начинается самое интересное - приведение кода в читаемое состояние.
1. **GlobalCode**, **InitCode**, **TurnCode**, **DialogBegin**
Код нужно разбить на блоки **if** и **op**.

2. **States**
Код стейта нужно разбить на блоки, для того, чтобы заменить все участки кода `ChangeState(...); exit;` на линки к соответствующим стейтам.

3. **Dialogs**, **DialogAnswers**
Код нужно разбить на блоки, для того, чтобы заменить все участки кода `DChange(...); exit;` на линки к соответствующим месседжам.

4. **DialogMsgs**
Код нужно разбить на блоки, для того, чтобы заменить все участки кода `DAdd(...);` на линки к соответствующим ансверам.

5. На этом этапе у вас есть ужасная паутина из стрелок, нужно ее распутать и удобно расположить все блоки. После этого получится неплохо выглядящий скрипт, делающий то же самое, что и изначальный, но который можно будет редактировать.



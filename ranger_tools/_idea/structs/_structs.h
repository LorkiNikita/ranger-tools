struct TMessagePlayer {
    __cls* cls;

    int _field_004;
    int _field_008;
    int _field_00C;
    int _field_010;
    int _field_014;
    int _field_018;
    int _field_01C;
    int _field_020;
    int _field_024;
    int _field_028;
    int _field_02C;
    int _field_030;
    int _field_034;
    int _field_038;
    int _field_03C;
};

struct TDemo {
    __cls* cls;
    TBufEC* buf_p;
};


struct TPlanet {
    __cls* cls;

    byte _field_004;
    byte _field_005;
    byte _field_006;
    byte _field_007;
    byte _field_008;
    byte _field_009;
    byte _field_00A;
    byte _field_00B;
    byte _field_00C;
    byte _field_00D;
    byte _field_00E;
    byte _field_00F;
    byte _field_010;
    byte _field_011;
    byte _field_012;
    byte _field_013;
    byte _field_014;
    byte _field_015;
    byte _field_016;
    byte _field_017;
    TStar* star;
    byte _field_01C;
    byte _field_01D;
    byte _field_01E;
    byte _field_01F;
    byte _field_020;
    byte _field_021;
    byte _field_022;
    byte _field_023;
    byte _field_024;
    byte _field_025;
    byte _field_026;
    byte _field_027;
    int orbit_radius;
    byte _field_02C;
    byte _field_02D;
    byte _field_02E;
    byte _field_02F;
    byte _field_030;
    byte _field_031;
    byte _field_032;
    byte _field_033;
    byte _field_034;
    byte _field_035;
    byte _field_036;
    byte _field_037;
    int radius;
    byte _field_03C;
    byte _field_03D;
    byte _field_03E;
    byte _field_03F;
    double angle_speed;
    byte invention_levels[1]; // точное кол-во уровней не знаю, оставлю пока 1
    byte _field_049;
    byte _field_04A;
    byte _field_04B;
    byte _field_04C;
    byte _field_04D;
    byte _field_04E;
    byte _field_04F;
    byte _field_050;
    byte _field_051;
    byte _field_052;
    byte _field_053;
    byte _field_054;
    byte _field_055;
    byte _field_056;
    byte _field_057;
    byte _field_058;
    byte _field_059;
    byte _field_05A;
    byte _field_05B;
    byte cur_invention;
    byte _field_05D;
    byte _field_05E;
    byte _field_05F;
    byte _field_060;
    byte _field_061;
    byte _field_062;
    byte _field_063;
    byte _field_064;
    byte _field_065;
    byte _field_066;
    byte _field_067;
    int population;
    byte eco;
    byte _field_06D;
    byte _field_06E;
    byte _field_06F;
    byte _field_070;
    byte _field_071;
    byte _field_072;
    byte _field_073;
    byte owner;
    byte _field_075;
    byte race;
    byte gov;
    byte _field_078;
    byte _field_079;
    byte _field_07A;
    byte _field_07B;
    byte _field_07C;
    byte _field_07D;
    byte _field_07E;
    byte _field_07F;
    byte _field_080;
    byte _field_081;
    byte _field_082;
    byte _field_083;
    byte _field_084;
    byte _field_085;
    byte _field_086;
    byte _field_087;
    byte _field_088;
    byte _field_089;
    byte _field_08A;
    byte _field_08B;
    byte _field_08C;
    byte _field_08D;
    byte _field_08E;
    byte _field_08F;
    byte _field_090;
    byte _field_091;
    byte _field_092;
    byte _field_093;
    byte _field_094;
    byte _field_095;
    byte _field_096;
    byte _field_097;
    byte _field_098;
    byte _field_099;
    byte _field_09A;
    byte _field_09B;
    byte _field_09C;
    byte _field_09D;
    byte _field_09E;
    byte _field_09F;
    byte _field_0A0;
    byte _field_0A1;
    byte _field_0A2;
    byte _field_0A3;
    byte _field_0A4;
    byte _field_0A5;
    byte _field_0A6;
    byte _field_0A7;
    byte _field_0A8;
    byte _field_0A9;
    byte _field_0AA;
    byte _field_0AB;
    byte _field_0AC;
    byte _field_0AD;
    byte _field_0AE;
    byte _field_0AF;
    byte _field_0B0;
    byte _field_0B1;
    byte _field_0B2;
    byte _field_0B3;
    byte _field_0B4;
    byte _field_0B5;
    byte _field_0B6;
    byte _field_0B7;
    byte _field_0B8;
    byte _field_0B9;
    byte _field_0BA;
    byte _field_0BB;
    byte _field_0BC;
    byte _field_0BD;
    byte _field_0BE;
    byte _field_0BF;
    byte _field_0C0;
    byte _field_0C1;
    byte _field_0C2;
    byte _field_0C3;
    byte _field_0C4;
    byte _field_0C5;
    byte _field_0C6;
    byte _field_0C7;
    byte _field_0C8;
    byte _field_0C9;
    byte _field_0CA;
    byte _field_0CB;
    byte _field_0CC;
    byte _field_0CD;
    byte _field_0CE;
    byte _field_0CF;
    byte _field_0D0;
    byte _field_0D1;
    byte _field_0D2;
    byte _field_0D3;
    byte _field_0D4;
    byte _field_0D5;
    byte _field_0D6;
    byte _field_0D7;
    byte _field_0D8;
    byte _field_0D9;
    byte _field_0DA;
    byte _field_0DB;
    byte _field_0DC;
    byte _field_0DD;
    byte _field_0DE;
    byte _field_0DF;
    byte _field_0E0;
    byte _field_0E1;
    byte _field_0E2;
    byte _field_0E3;
    byte _field_0E4;
    byte _field_0E5;
    byte _field_0E6;
    byte _field_0E7;
    byte _field_0E8;
    byte _field_0E9;
    byte _field_0EA;
    byte _field_0EB;
    byte _field_0EC;
    byte _field_0ED;
    byte _field_0EE;
    byte _field_0EF;
    byte _field_0F0;
    byte _field_0F1;
    byte _field_0F2;
    byte _field_0F3;
    byte _field_0F4;
    byte _field_0F5;
    byte _field_0F6;
    byte _field_0F7;
    byte _field_0F8;
    byte _field_0F9;
    byte _field_0FA;
    byte _field_0FB;
    byte _field_0FC;
    byte _field_0FD;
    byte _field_0FE;
    byte _field_0FF;
    byte _field_100;
    byte _field_101;
    byte _field_102;
    byte _field_103;
    byte _field_104;
    byte _field_105;
    byte _field_106;
    byte _field_107;
    byte _field_108;
    byte _field_109;
    byte _field_10A;
    byte _field_10B;
    byte _field_10C;
    byte _field_10D;
    byte _field_10E;
    byte _field_10F;
    byte _field_110;
    byte _field_111;
    byte _field_112;
    byte _field_113;
    TList* warriors;
    byte _field_118;
    byte _field_119;
    byte _field_11A;
    byte _field_11B;
    byte _field_11C;
    byte _field_11D;
    byte _field_11E;
    byte _field_11F;
    byte _field_120;
    byte _field_121;
    byte _field_122;
    byte _field_123;
    byte _field_124;
    byte _field_125;
    byte _field_126;
    byte _field_127;
    byte _field_128;
    byte _field_129;
    byte _field_12A;
    byte _field_12B;
    byte _field_12C;
    byte _field_12D;
    byte _field_12E;
    byte _field_12F;
    byte _field_130;
    byte _field_131;
    byte _field_132;
    byte _field_133;
    byte _field_134;
    byte _field_135;
    byte _field_136;
    byte _field_137;
    byte _field_138;
    byte _field_139;
    byte _field_13A;
    byte _field_13B;
    byte _field_13C;
    byte _field_13D;
    byte _field_13E;
    byte _field_13F;
    byte _field_140;
    byte _field_141;
    byte _field_142;
    byte _field_143;
    byte _field_144;
    byte _field_145;
    byte _field_146;
    byte _field_147;
    byte _field_148;
    byte _field_149;
    byte _field_14A;
    byte _field_14B;
    byte _field_14C;
    byte _field_14D;
    byte _field_14E;
    byte _field_14F;
    byte _field_150;
    byte _field_151;
    byte _field_152;
    byte _field_153;
    byte _field_154;
    byte _field_155;
    byte _field_156;
    byte _field_157;
    byte _field_158;
    byte _field_159;
    byte _field_15A;
    byte _field_15B;
    byte _field_15C;
    byte _field_15D;
    byte _field_15E;
    byte _field_15F;
    byte _field_160;
    byte _field_161;
    byte _field_162;
    byte _field_163;
    byte _field_164;
    byte _field_165;
    byte _field_166;
    byte _field_167;
    byte no_landing;
    byte no_shopupdate;
    byte _field_16A;
    byte _field_16B;
}; // 16C


struct TStar {
    __cls* cls;

    byte _field_004;
    byte _field_005;
    byte _field_006;
    byte _field_007;
    byte _field_008;
    byte _field_009;
    byte _field_00A;
    byte _field_00B;
    byte _field_00C;
    byte _field_00D;
    byte _field_00E;
    byte _field_00F;
    byte _field_010;
    byte _field_011;
    byte _field_012;
    byte _field_013;
    byte _field_014;
    byte _field_015;
    byte _field_016;
    byte _field_017;
    byte _field_018;
    byte _field_019;
    byte _field_01A;
    byte _field_01B;
    byte _field_01C;
    byte _field_01D;
    byte _field_01E;
    byte _field_01F;
    byte _field_020;
    byte _field_021;
    byte _field_022;
    byte _field_023;
    byte _field_024;
    byte _field_025;
    byte _field_026;
    byte _field_027;
    byte _field_028;
    byte _field_029;
    byte _field_02A;
    byte _field_02B;
    TList* ships;
    byte _field_030;
    byte _field_031;
    byte _field_032;
    byte _field_033;
    byte _field_034;
    byte _field_035;
    byte _field_036;
    byte _field_037;
    byte _field_038;
    byte _field_039;
    byte _field_03A;
    byte _field_03B;
    byte _field_03C;
    byte _field_03D;
    byte _field_03E;
    byte _field_03F;
    byte _field_040;
    byte _field_041;
    byte owner;
    byte _field_043;
    byte custom_faction;
    byte _field_045;
    byte _field_046;
    byte _field_047;
    byte battle;
    byte series;
    byte _field_04A;
    byte _field_04B;
    byte _field_04C;
    byte _field_04D;
    byte _field_04E;
    byte _field_04F;
    byte _field_050;
    byte _field_051;
    byte _field_052;
    byte _field_053;
    byte _field_054;
    byte _field_055;
    byte _field_056;
    byte _field_057;
    byte _field_058;
    byte _field_059;
    byte _field_05A;
    byte _field_05B;
    byte _field_05C;
    byte _field_05D;
    byte _field_05E;
    byte _field_05F;
    byte _field_060;
    byte _field_061;
    byte _field_062;
    byte _field_063;
    byte _field_064;
    byte _field_065;
    byte _field_066;
    byte _field_067;
    byte _field_068;
    byte _field_069;
    byte _field_06A;
    byte _field_06B;
    byte _field_06C;
    byte _field_06D;
    byte _field_06E;
    byte _field_06F;
    byte _field_070;
    byte _field_071;
    byte _field_072;
    byte _field_073;
    byte _field_074;
    byte _field_075;
    byte _field_076;
    byte _field_077;
    byte _field_078;
    byte _field_079;
    byte _field_07A;
    byte _field_07B;
    byte _field_07C;
    byte _field_07D;
    byte _field_07E;
    byte _field_07F;
    byte _field_080;
    byte _field_081;
    byte _field_082;
    byte _field_083;
    byte _field_084;
    byte _field_085;
    byte _field_086;
    byte _field_087;
    byte _field_088;
    byte _field_089;
    byte _field_08A;
    byte _field_08B;
    byte _field_08C;
    byte _field_08D;
    byte _field_08E;
    byte _field_08F;
    byte _field_090;
    byte _field_091;
    byte _field_092;
    byte _field_093;
    byte _field_094;
    byte _field_095;
    byte _field_096;
    byte _field_097;
    byte _field_098;
    byte _field_099;
    byte _field_09A;
    byte _field_09B;
    byte _field_09C;
    byte _field_09D;
    byte _field_09E;
    byte _field_09F;
    byte _field_0A0;
    byte _field_0A1;
    byte _field_0A2;
    byte _field_0A3;
    byte _field_0A4;
    byte _field_0A5;
    byte _field_0A6;
    byte _field_0A7;
    byte _field_0A8;
    byte _field_0A9;
    byte _field_0AA;
    byte _field_0AB;
    byte _field_0AC;
    byte _field_0AD;
    byte _field_0AE;
    byte _field_0AF;
    byte _field_0B0;
    byte _field_0B1;
    byte _field_0B2;
    byte _field_0B3;
    byte _field_0B4;
    byte _field_0B5;
    byte _field_0B6;
    byte _field_0B7;
    byte _field_0B8;
    byte _field_0B9;
    byte _field_0BA;
    byte _field_0BB;
    byte _field_0BC;
    byte _field_0BD;
    byte _field_0BE;
    byte _field_0BF;
    byte _field_0C0;
    byte _field_0C1;
    byte _field_0C2;
    byte _field_0C3;
    byte _field_0C4;
    byte _field_0C5;
    byte _field_0C6;
    byte _field_0C7;
    byte _field_0C8;
    byte _field_0C9;
    byte _field_0CA;
    byte _field_0CB;
    byte _field_0CC;
    byte _field_0CD;
    byte _field_0CE;
    byte _field_0CF;
    byte _field_0D0;
    byte _field_0D1;
    byte _field_0D2;
    byte _field_0D3;
    byte _field_0D4;
    byte _field_0D5;
    byte _field_0D6;
    byte _field_0D7;
    byte no_come_kling;
    byte _field_0D9;
    byte _field_0DA;
    byte _field_0DB;
    byte _field_0DC;
    byte _field_0DD;
    byte _field_0DE;
    byte _field_0DF;
    byte _field_0E0;
    byte _field_0E1;
    byte _field_0E2;
    byte _field_0E3;
    byte _field_0E4;
    byte _field_0E5;
    byte _field_0E6;
    byte _field_0E7;
    byte _field_0E8;
    byte _field_0E9;
    byte _field_0EA;
    byte _field_0EB;
    byte _field_0EC;
    byte _field_0ED;
    byte _field_0EE;
    byte _field_0EF;
    byte filmbuild;
    byte _field_0F1;
    byte _field_0F2;
    byte _field_0F3;
    byte _field_0F4;
    byte _field_0F5;
    byte _field_0F6;
    byte _field_0F7;
    byte _field_0F8;
    byte _field_0F9;
    byte _field_0FA;
    byte _field_0FB;
    byte _field_0FC;
    byte _field_0FD;
    byte _field_0FE;
    byte _field_0FF;
    byte _field_100;
    byte _field_101;
    byte _field_102;
    byte _field_103;
    byte _field_104;
    byte _field_105;
    byte _field_106;
    byte _field_107;
    byte _field_108;
    byte _field_109;
    byte _field_10A;
    byte _field_10B;
    byte _field_10C;
    byte _field_10D;
    byte _field_10E;
    byte _field_10F;
    byte _field_110;
    byte _field_111;
    byte _field_112;
    byte _field_113;
}; // 114

struct THole {
    __cls* cls;

    byte _field_004;
    byte _field_005;
    byte _field_006;
    byte _field_007;
    byte _field_008;
    byte _field_009;
    byte _field_00A;
    byte _field_00B;
    byte _field_00C;
    byte _field_00D;
    byte _field_00E;
    byte _field_00F;
    byte _field_010;
    byte _field_011;
    byte _field_012;
    byte _field_013;
    byte _field_014;
    byte _field_015;
    byte _field_016;
    byte _field_017;
    byte _field_018;
    byte _field_019;
    byte _field_01A;
    byte _field_01B;
    byte _field_01C;
    byte _field_01D;
    byte _field_01E;
    byte _field_01F;
    byte _field_020;
    byte _field_021;
    byte _field_022;
    byte _field_023;
    byte _field_024;
    byte _field_025;
    byte _field_026;
    byte _field_027;
    byte _field_028;
    byte _field_029;
    byte _field_02A;
    byte _field_02B;
    byte _field_02C;
    byte _field_02D;
    byte _field_02E;
    byte _field_02F;
    byte _field_030;
    byte _field_031;
    byte _field_032;
    byte _field_033;
}; // 34


struct TQuestGameContent {};
struct TTextField {};
struct TQuestParameter {};
struct TArrayRectGR {};
